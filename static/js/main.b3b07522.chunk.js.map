{"version":3,"sources":["layouts/channels.jsx","components/firstCharOfName.js","components/contactProfile.js","components/contactDetails.jsx","layouts/customer.jsx","components/messageContent.js","components/showCommentReply.js","components/inputText.js","layouts/messageInfo.jsx","components/myReactQuill.js","components/searchBox.jsx","components/filterMenuForThreads.js","services/httpUtil.js","layouts/threads.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBarHeight","alignItems","justifyContent","backgroundColor","palette","primary","main","mixins","toolbar","menuButton","width","height","menuButtonHide","hide","drawer","flexShrink","whiteSpace","drawerOpen","overflow","breakpoints","down","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","transition","leavingScreen","overflowX","spacing","up","list","marginLeft","paddingLeft","minWidth","textInList","fontSize","padding","iconInList","link","marginTop","translate","props","classes","React","useState","open","setOpen","Drawer","variant","className","clsx","paper","IconButton","color","aria-label","onClick","Divider","isError","isLoading","undefined","channels","CircularProgress","List","map","ch","index","ListItem","button","key","id","selected","selectedChannelId","event","channelID","onSelectedChannelChange","ListItemIcon","Badge","max","badgeContent","count","ListItemText","name","margin","orange","getContrastText","deepOrange","small","medium","large","FirstCharOfName","size","meduim","initials","firstName","toUpperCase","lastName","Avatar","StyledMenu","withStyles","border","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","common","white","MenuItem","ContactProfile","anchorEl","setAnchorEl","handleClick","currentTarget","contact","Button","aria-controls","aria-haspopup","keepMounted","Boolean","onClose","ContactDetails","maxWidth","background","inline","src","alt","appbarHieght","content","flexGrow","customerInfo","customerTicket","customerBooking","Customer","anchor","card","overflowY","avatar","red","header","MessageContent","Card","CardHeader","action","title","subheader","CardContent","Typography","component","maxHeight","borderRadius","commentText","textAlign","ShowCommentReply","TabPanel","children","value","other","role","hidden","aria-labelledby","Box","p","a11yProps","rootText","textInput","InputText","setValue","AppBar","position","Tabs","onChange","newValue","Tab","label","TextField","multiline","fullWidth","Component","grow","input","sectionDesktop","messages","sectionMobile","MessageInfo","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","renderMobileMenu","Toolbar","noWrap","edge","boxShadow","flex","SearchBox","Paper","iconButton","onToggle","InputBase","placeholder","inputProps","type","FilterMenuForThreads","text","setText","handleClose","textContent","endIcon","fetchData","url","a","async","axios","process","result","data","results","listSection","ul","searchInputOpen","searchInputClose","tools","useSWR","fetchedThreads","error","searchQuery","showSearchInput","setShowSearchInput","console","log","handleToggleSearchInput","Zoom","in","Checkbox","show","msg","ListItemAvatar","tag","secondary","Fragment","status","Array","e","i","Skeleton","backdropRoot","justify","backdrop","zIndex","setSelectedChannelID","fetchedChannels","isErrorChannels","selectedChannelID","selectedEmail","setSelectedEmail","CssBaseline","Grid","container","direction","item","xs","sm","md","window","location","hostname","match","setDefaultTranslations","en","fr","setDefaultLanguage","createMuiTheme","amber","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3b07522.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { translate } from \"react-multi-lang\";\n\nconst drawerWidth = \"15%\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBarHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: theme.palette.primary.main,\n    ...theme.mixins.toolbar\n  },\n  menuButton: {\n    width: 42,\n    height: 42\n  },\n  menuButtonHide: {\n    width: 42,\n    height: 42\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    overflow: \"hidden\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"30vh\"\n    },\n\n    // backgroundColor: \"#cecece\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    // backgroundColor: \"#ffffff\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(5) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1\n    }\n  },\n  list: {\n    marginLeft: 7,\n    paddingLeft: 0,\n    minWidth: 5\n  },\n  textInList: {\n    fontSize: 8,\n    padding: -10\n  },\n  iconInList: {\n    minWidth: 35\n  },\n  link: {\n    marginTop: 80\n  }\n}));\n\nconst Channels = props => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChannelClick = (event, channelID) => {\n    props.onSelectedChannelChange(channelID);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })\n      }}\n    >\n      <div className={classes.appBarHeight}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open\n          })}\n        >\n          <MenuIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.menuButtonHide, {\n            [classes.hide]: !open\n          })}\n          onClick={handleDrawerClose}\n        >\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n\n      <div>\n        <Divider />\n        {props.isError ? (\n          <div>Failed to load channels</div>\n        ) : props.isLoading || props.channels === undefined ? (\n          <CircularProgress />\n        ) : (\n          <List>\n            {props.channels.map((ch, index) => (\n              <ListItem\n                button\n                className={classes.list}\n                key={ch.id}\n                selected={props.selectedChannelId === ch.id}\n                onClick={event => handleChannelClick(event, ch.id)}\n              >\n                <ListItemIcon className={classes.iconInList}>\n                  <Badge color=\"secondary\" max={99} badgeContent={ch.count}>\n                    <MailIcon />\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText\n                  primary={ch.name}\n                  className={classes.textInList}\n                />\n              </ListItem>\n            ))}\n          </List>\n        )}\n      </div>\n    </Drawer>\n  );\n};\n\nexport default translate(Channels);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500]\n  },\n  small: {\n    fontSize: theme.spacing(2),\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  medium: {\n    fontSize: theme.spacing(5),\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  large: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    fontSize: theme.spacing(8)\n  }\n}));\n\nconst FirstCharOfName = props => {\n  const classes = useStyles();\n  let size;\n  switch (props.size) {\n    case \"small\":\n      size = classes.small;\n      break;\n    case \"meduim\":\n      size = classes.meduim;\n      break;\n    case \"large\":\n      size = classes.large;\n      break;\n  }\n  var initials =\n    props.firstName[0].toUpperCase() + \"\" + props.lastName[0].toUpperCase();\n  return (\n    <div className={classes.root}>\n      <Avatar className={`${classes.orange} ${size}`}>{initials}</Avatar>\n    </div>\n  );\n};\n\nexport default FirstCharOfName;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport FirstCharOfName from \"./firstCharOfName\";\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\"\n  }\n})(props => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\"\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles(theme => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem);\n\nconst ContactProfile = props => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <div className=\"card\">\n      <FirstCharOfName\n        firstName={props.contact.name}\n        lastName={props.contact.name}\n        size=\"large\"\n      />\n      <div>\n        <Button\n          aria-controls=\"customized-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleClick}\n        >\n          Open Menu\n        </Button>\n        <StyledMenu\n          id=\"customized-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <StyledMenuItem>\n            <ListItemText primary=\"option1\" />\n          </StyledMenuItem>\n          <StyledMenuItem>\n            <ListItemText primary=\"option2\" />\n          </StyledMenuItem>\n          <StyledMenuItem>\n            <ListItemText primary=\"option3\" />\n          </StyledMenuItem>\n        </StyledMenu>\n        <Button\n          aria-controls=\"customized-menu\"\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          color=\"#1234ff\"\n          onClick={handleClick}\n        >\n          Create ticket\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactProfile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ContactProfile from \"./contactProfile\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\n\nconst ContactDetails = props => {\n  if (props.selected === null) return <p>No contacts selected</p>;\n  return (\n    <div>\n      <ContactProfile contact={props.selected} />\n      <div className=\"card\">\n        <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body\">\n          <h3 className=\"card-title\">heading</h3>\n          <p className=\"card-text\">{props.selected.name}</p>\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">{`ID: ${props.selected.id}`}</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactDetails;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ContactDetails from \"../components/contactDetails\";\n\nconst drawerWidth = \"20%\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appbarHieght: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    backgroundColor: theme.palette.primary.main,\n    ...theme.mixins.toolbar\n  },\n  menuButton: {\n    // marginRight: 36\n    width: 42,\n    height: 42\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    // display: \"flex\",\n    // alignItems: \"center\",\n    // justifyContent: \"flex-start\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    // backgroundColor: \"#c4c4c4\",\n    width: drawerWidth,\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50vh\"\n    },\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    // backgroundColor: \"#969696\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(4) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1\n    }\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0)\n  },\n  customerInfo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    // justifyContent: \"flex-end\",\n    height: \"30vh\"\n    // overflowY: \"hidden\",\n    // backgroundColor: \"green\"\n  },\n  customerTicket: {\n    display: \"flex\",\n    alignItems: \"center\",\n    // justifyContent: \"flex-end\",\n    height: \"30vh\"\n    // overflowX: \"hidden\",\n    // backgroundColor: \"blue\"\n  },\n  customerBooking: {\n    display: \"flex\",\n    alignItems: \"center\",\n    // justifyContent: \"flex-end\",\n    height: \"30vh\",\n    overflowX: \"scroll\"\n    // backgroundColor: \"white\"\n  }\n}));\n\nconst Customer = props => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"right\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })\n      }}\n    >\n      <div className={classes.appbarHieght}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          // edge=\"end\"\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open\n          })}\n        >\n          <PersonIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.menuButton, {\n            [classes.hide]: !open\n          })}\n          onClick={handleDrawerClose}\n        >\n          <ChevronRightIcon />\n        </IconButton>\n      </div>\n      <div>\n        <Divider />\n        <List>\n          <ListItem>\n            <ListItemIcon />\n            <div className={classes.customerInfo}>\n              {\" \"}\n              <ContactDetails selected={props.selected} />\n            </div>\n          </ListItem>\n          <ListItem>\n            <ListItemIcon />\n            <ListItemText primary=\"Assigned to me\" />\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default Customer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: \"80%\",\n    marginLeft: \"5%\",\n    marginTop: \"2%\",\n    // maxHeight: \"30%\",\n    overflowY: \"auto\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  header: {\n    backgroundColor: theme.palette.primary,\n    color: \"white\"\n  }\n}));\n\nexport default function MessageContent() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            LB\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon className={classes.header} />\n          </IconButton>\n        }\n        title=\"Message Content\"\n        subheader=\"January 30, 2020\"\n        className={classes.header}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: \"70%\",\n    marginLeft: \"10%\",\n    marginTop: \"2%\",\n    maxHeight: \"30%\",\n    overflowY: \"hidden\",\n    // backgroundColor: \"#fcf5a4\",\n    border: \"2px solid #ffeb00\",\n    borderRadius: \"9px 9px 9px 9px\"\n  },\n  content: {\n    display: \"flex\"\n  },\n  commentText: {\n    padding: 2,\n    textAlign: \"center\"\n  }\n}));\n\nexport default function ShowCommentReply() {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Avatar aria-label=\"recipe\" className={classes.avatar}>\n          <FaceIcon />\n        </Avatar>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n          className={classes.commentText}\n        >\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n    // height: \"10vh\",\n    // backgroundColor: theme.palette.background.paper\n    // backgroundColor: theme.palette.primary\n    // backgroundColor: \"red\"\n  },\n  rootText: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n      //   width: \"100%\"\n    },\n    textInput: {\n      overflowY: \"hidden\"\n    }\n  }\n}));\n\nexport default function InputText() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Comment\" {...a11yProps(0)} />\n          <Tab label=\"Reply\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Editor />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <TextField\n          id=\"standard-textarea\"\n          label=\"Comment\"\n          //   placeholder=\"Comment\"\n          multiline\n          fullWidth\n        />\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport MessageContent from \"../components/messageContent\";\nimport ShowCommentReply from \"../components/showCommentReply\";\nimport InputText from \"../components/inputText\";\nimport MyReactQuill from \"../components/myReactQuill\";\n// import InputRichText from \"../components/inputRichText\";\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n    overflow: \"auto\",\n    height: \"60%\"\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  input: {\n    maxHeight: \"40vh\",\n    overflow: \"auto\"\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  messages: {\n    // backgroundColor: \"green\",\n    // overflow: \"auto\"\n    overflow: \"auto\",\n    height: \"50vh\"\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n}));\n\nexport default function MessageInfo() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>test 1</MenuItem>\n      <MenuItem onClick={handleMenuClose}>test 2</MenuItem>\n      <MenuItem onClick={handleMenuClose}>test 3</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <ArrowDropDownIcon />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Message Information\n          </Typography>\n          <div className={classes.grow} />\n          {/* <div className={classes.sectionDesktop}> */}\n          <Typography noWrap>Mark as closed</Typography>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"account of current user\"\n            aria-controls={menuId}\n            aria-haspopup=\"true\"\n            onClick={handleProfileMenuOpen}\n            color=\"inherit\"\n          >\n            <ArrowDropDownIcon />\n          </IconButton>\n          {/* </div> */}\n          {renderMobileMenu}\n          {renderMenu}\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.messages}>\n        <MessageContent />\n        <ShowCommentReply />\n        <ShowCommentReply />\n        <ShowCommentReply />\n        <ShowCommentReply />\n      </div>\n      <div className={classes.input}>\n        <InputText />\n      </div>\n    </>\n  );\n}\n","import ReactQuill from \"react-quill\";\nimport React, { Component } from \"react\";\n\nclass MyReactQuill extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      modules: {\n        toolbar: [\n          [{ header: [1, 2, false] }],\n          [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n          [\n            { list: \"ordered\" },\n            { list: \"bullet\" },\n            { indent: \"-1\" },\n            { indent: \"+1\" }\n          ],\n          [\"link\", \"image\"],\n          [\"clean\"]\n        ]\n      },\n      formats: [\n        \"header\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strike\",\n        \"blockquote\",\n        \"list\",\n        \"bullet\",\n        \"indent\",\n        \"link\",\n        \"image\"\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"text-editor\">\n        <ReactQuill\n          // theme=\"snow\"\n          modules={this.state.modules}\n          formats={this.state.formats}\n        ></ReactQuill>\n      </div>\n    );\n  }\n}\n\nexport default MyReactQuill;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // padding: \"2px 2px\",\n    backgroundColor: theme.palette.primary.main,\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    boxShadow: \"0px 0px 0px 0px\"\n  },\n  input: {\n    // marginLeft: theme.spacing(1),\n    flex: 1\n  }\n}));\n\nconst SearchBox = props => {\n  const classes = useStyles();\n\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"menu\"\n        onClick={props.onToggle}\n      >\n        <CancelIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search...\"\n        inputProps={{ \"aria-label\": \"search google maps\" }}\n      />\n      <IconButton type=\"submit\" aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\nexport default SearchBox;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nexport default function FilterMenuForThreads() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [text, setText] = React.useState(\"Filter\");\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = event => {\n    if (event.currentTarget.textContent) {\n      setText(event.currentTarget.textContent);\n    } else {\n      setText(\"All\");\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        endIcon={<ArrowDropDownIcon />}\n      >\n        {text}\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>OPEN</MenuItem>\n        <MenuItem onClick={handleClose}>CLOSE</MenuItem>\n        <MenuItem onClick={handleClose}>ALL</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport const fetchData = async url => {\n  try {\n    const result = await axios(process.env.REACT_APP_API_ENDPOINT + url);\n    return result.data.results;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport SearchBox from \"../components/searchBox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FirstCharOfName from \"../components/firstCharOfName\";\nimport FilterMenuForThreads from \"../components/filterMenuForThreads\";\nimport { translate } from \"react-multi-lang\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/paper\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Box from \"@material-ui/core/Box\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport Slide from \"@material-ui/core/Slide\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport useSWR from \"swr\";\nimport { fetchData } from \"../services/httpUtil\";\nimport { Checkbox } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    //overflow: \"hidden\",\n    height: \"100vh\"\n  },\n\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    height: \"90vh\"\n  },\n  listSection: {\n    backgroundColor: \"inherit\"\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0\n  },\n  inline: {\n    display: \"inline\"\n  },\n  searchInputOpen: {\n    width: \"80%\",\n    overflow: \"hidden\",\n    backgroundColor: \"#cecece\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  searchInputClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(5) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1\n    }\n  },\n  hide: {\n    display: \"none\"\n  },\n  tools: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: \"0px 0px 0px 0px\"\n  },\n  toolbar: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  }\n}));\n\nconst Threads = props => {\n  const { data: fetchedThreads, error: isErrorThreads } = useSWR(\n    // useSWR will not fetch when props.channelID is undefined\n    props.channelID ? `channels/${props.channelID}/threads` : null,\n    fetchData\n  );\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [showSearchInput, setShowSearchInput] = useState(false);\n  console.log(showSearchInput);\n  const classes = useStyles();\n\n  const handleToggleSearchInput = () => {\n    setShowSearchInput(!showSearchInput);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar className={classes.toolbar}>\n          <Zoom in={!showSearchInput}>\n            <Paper\n              className={clsx({\n                [classes.tools]: !showSearchInput,\n                [classes.hide]: showSearchInput\n              })}\n            >\n              <Checkbox />\n              <FilterMenuForThreads />\n              <IconButton\n                aria-label=\"delete\"\n                onClick={handleToggleSearchInput}\n                size=\"small\"\n              >\n                <SearchIcon />\n              </IconButton>\n            </Paper>\n          </Zoom>\n          <Zoom in={showSearchInput}>\n            <Paper\n              className={clsx({\n                [classes.tools]: showSearchInput,\n                [classes.hide]: !showSearchInput\n              })}\n            >\n              <SearchBox\n                value={searchQuery}\n                onToggle={handleToggleSearchInput}\n                show={showSearchInput}\n                // onChange={handleSearch}\n              />\n            </Paper>\n          </Zoom>\n        </Toolbar>\n      </AppBar>\n\n      <Paper variant={\"outlined\"}>\n        <List className={classes.list}>\n          {!fetchedThreads\n            ? [...Array(20)].map((e, i) => (\n                <ListItem alignItems=\"flex-start\">\n                  <Box width={\"100%\"}>\n                    <Skeleton />\n                    <Skeleton width=\"60%\" />\n                  </Box>\n                </ListItem>\n              ))\n            : fetchedThreads.map(msg => (\n                <>\n                  <ListItem key={msg.id} alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                      <FirstCharOfName\n                        size=\"small\"\n                        firstName={msg.id}\n                        lastName={msg.tag}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={msg.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {msg.tag}\n                            {\" - \"}\n                          </Typography>\n                          {msg.status}\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                  <Divider variant=\"middle\" component=\"li\" />\n                </>\n              ))}\n        </List>\n      </Paper>\n    </div>\n  );\n};\n\nexport default translate(Threads);\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Channels from \"./layouts/channels\";\nimport { translate } from \"react-multi-lang\";\nimport Customer from \"./layouts/customer\";\nimport MessageInfo from \"./layouts/messageInfo\";\nimport Threads from \"./layouts/threads\";\nimport useSWR from \"swr\";\nimport { fetchData } from \"./services/httpUtil\";\n\nconst drawerWidth = \"15%\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  menuButton: {\n    width: 42,\n    height: 42\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    height: \"100vh\"\n  },\n  backdropRoot: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n      alignItems: \"center\",\n      justify: \"center\",\n      height: \"100vh\"\n    }\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const { data: fetchedChannels, error: isErrorChannels } = useSWR(\n    `channels`,\n    async () => {\n      const data = await fetchData(`channels`);\n      setSelectedChannelID(data[0].id);\n      return data;\n    }\n  );\n\n  const [selectedChannelID, setSelectedChannelID] = useState();\n  // ---\n\n  const [selectedEmail, setSelectedEmail] = useState(null);\n\n  const handleOnClickContacts = data => {\n    setSelectedEmail(data);\n  };\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Channels\n        isLoading={fetchedChannels === undefined}\n        isError={isErrorChannels}\n        channels={fetchedChannels}\n        onSelectedChannelChange={channelID => {\n          setSelectedChannelID(channelID);\n        }}\n        selectedChannelId={selectedChannelID}\n      />\n      <main className={classes.content}>\n        <Grid container spacing={0} direction=\"row\">\n          <Grid item xs={12} sm={12} md={3}>\n            <Threads\n              channelID={selectedChannelID}\n              onClick={handleOnClickContacts}\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={9}>\n            <MessageInfo />\n          </Grid>\n        </Grid>\n      </main>\n      <Customer selected={selectedEmail} />\n    </div>\n  );\n};\n\nexport default translate(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"typeface-roboto\";\nimport { red, amber } from \"@material-ui/core/colors\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { setDefaultTranslations, setDefaultLanguage } from \"react-multi-lang\";\n// @ts-ignore\nimport en from \"./languages/en.json\";\n// @ts-ignore\nimport fr from \"./languages/fr.json\";\n\nsetDefaultTranslations({ en, fr });\nsetDefaultLanguage(\"en\");\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n    secondary: {\n      main: amber[500]\n    }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}